From aeae204aa0b0edecaf31cb3695c1ec70e64bcdbe Mon Sep 17 00:00:00 2001
From: fire855 <thefire855@gmail.com>
Date: Sun, 17 Jan 2016 16:51:19 +0100
Subject: [PATCH 1/3] Fix hwui crash

Change-Id: I33b4602d677a702157b7fa924d8d83aff6794603
---
 libs/hwui/Caches.cpp | 13 +++----------
 1 file changed, 3 insertions(+), 10 deletions(-)

diff --git a/libs/hwui/Caches.cpp b/libs/hwui/Caches.cpp
index 77b66f2..76abcd1 100644
--- a/libs/hwui/Caches.cpp
+++ b/libs/hwui/Caches.cpp
@@ -117,16 +117,9 @@ void Caches::initFont() {
 }
 
 void Caches::initExtensions() {
-    if (mExtensions.hasDebugMarker()) {
-        eventMark = glInsertEventMarkerEXT;
-
-        startMark = glPushGroupMarkerEXT;
-        endMark = glPopGroupMarkerEXT;
-    } else {
-        eventMark = eventMarkNull;
-        startMark = startMarkNull;
-        endMark = endMarkNull;
-    }
+    eventMark = eventMarkNull;
+    startMark = startMarkNull;
+    endMark = endMarkNull;
 
     if (mExtensions.hasDebugLabel() && (drawDeferDisabled || drawReorderDisabled)) {
         setLabel = glLabelObjectEXT;
-- 
1.9.1


From a1643017a2bc9464a0286889cc06aeef128a02f7 Mon Sep 17 00:00:00 2001
From: maniacx <macs18max@gmail.com>
Date: Sun, 2 Aug 2015 00:12:50 +0400
Subject: [PATCH 2/3] Revert "Fix an apk icon animation corruption issue"

Low end device UI slows down with this

This reverts commit dbac4a767dd128f88932c925471b0a778a24d6b2.
---
 libs/hwui/DamageAccumulator.cpp | 1 -
 1 file changed, 1 deletion(-)

diff --git a/libs/hwui/DamageAccumulator.cpp b/libs/hwui/DamageAccumulator.cpp
index 3bd0da9..420e331 100644
--- a/libs/hwui/DamageAccumulator.cpp
+++ b/libs/hwui/DamageAccumulator.cpp
@@ -138,7 +138,6 @@ static inline void mapRect(const RenderProperties& props, const SkRect& in, SkRe
     }
     temp.offset(props.getLeft(), props.getTop());
     out->join(temp);
-    out->join(in);
 }
 
 static DirtyStack* findParentRenderNode(DirtyStack* frame) {
-- 
1.9.1


From ac0d646a3224c998f19146ce701707f0d800d038 Mon Sep 17 00:00:00 2001
From: yugers <yugers@gmail.com>
Date: Thu, 28 Jan 2016 11:07:55 +0300
Subject: [PATCH 3/3] allwinner additions

Change-Id: I2698c021fd09aa0bccae44b1a2cc3853c4948a72
---
 core/java/android/net/ConnectivityManager.java | 29 ++++++++++++++++++++++++++
 libs/hwui/font/Font.cpp                        | 10 +++++++--
 2 files changed, 37 insertions(+), 2 deletions(-)

diff --git a/core/java/android/net/ConnectivityManager.java b/core/java/android/net/ConnectivityManager.java
index 34c8a16..470fbc9 100644
--- a/core/java/android/net/ConnectivityManager.java
+++ b/core/java/android/net/ConnectivityManager.java
@@ -37,6 +37,7 @@ import android.os.Message;
 import android.os.Messenger;
 import android.os.RemoteException;
 import android.os.ServiceManager;
+import android.os.SystemProperties;
 import android.provider.Settings;
 import android.telephony.SubscriptionManager;
 import android.telephony.TelephonyManager;
@@ -648,6 +649,19 @@ public class ConnectivityManager {
      * {@link android.Manifest.permission#ACCESS_NETWORK_STATE}.
      */
     public NetworkInfo getNetworkInfo(int networkType) {
+        if (networkType == TYPE_MOBILE) {
+            if(SystemProperties.get("ro.sw.embeded.telephony", "false").equals("false")) {
+                final StackTraceElement[] callStack = Thread.currentThread().getStackTrace();
+                StackTraceElement caller = callStack[3];
+                if (caller != null) {
+//		   Log.d(TAG, "  getNetworkInfo className = " + caller.getClassName() );
+		   if(caller.getClassName().contains("android.telephony.cts")){
+//		   	 Log.d(TAG, " getNetworkInfo contain android.telephony.cts");
+                         return null;
+		   }     
+                }
+           }       
+       }
         try {
             return mService.getNetworkInfo(networkType);
         } catch (RemoteException e) {
@@ -1907,6 +1921,21 @@ public class ConnectivityManager {
      * @hide
      */
     public boolean isNetworkSupported(int networkType) {
+        //report do not support mobile network to setupwizard when we don't hava
+        //embeded mobile module but support usb dongle. This will skip meaningless
+        //wait for mobile state at during deivce setup.
+        if (networkType == TYPE_MOBILE) {
+            if(SystemProperties.get("ro.sw.embeded.telephony", "false").equals("false")) {
+                final StackTraceElement[] callStack = Thread.currentThread().getStackTrace();
+                StackTraceElement caller = callStack[3];
+                if (caller != null) {
+                    if ("com.google.android.setupwizard.BaseActivity".equals(caller.getClassName()) &&
+                        "isMobileNetworkSupported".equals(caller.getMethodName())) {
+                        return false;
+                    }
+                }
+            }
+        }
         try {
             return mService.isNetworkSupported(networkType);
         } catch (RemoteException e) {}
diff --git a/libs/hwui/font/Font.cpp b/libs/hwui/font/Font.cpp
index 67dc25d..af39f16 100644
--- a/libs/hwui/font/Font.cpp
+++ b/libs/hwui/font/Font.cpp
@@ -228,10 +228,16 @@ void Font::drawCachedGlyphBitmap(CachedGlyphInfo* glyph, int x, int y, uint8_t*
 
     for (uint32_t cacheY = startY, bitmapY = dstY * bitmapWidth; cacheY < endY;
             cacheY += srcStride, bitmapY += bitmapWidth) {
-        for (uint32_t i = 0; i < glyph->mBitmapWidth; ++i) {
-            bitmap[bitmapY + dstX + i] |= cacheBuffer[cacheY + (glyph->mStartX + i)*formatSize + alpha_channel_offset];
+
+        if (formatSize == 1) {
+            memcpy(&bitmap[bitmapY + dstX], &cacheBuffer[cacheY + glyph->mStartX], glyph->mBitmapWidth);
+        } else {
+            for (uint32_t i = 0; i < glyph->mBitmapWidth; ++i) {
+                bitmap[bitmapY + dstX + i] = cacheBuffer[cacheY + (glyph->mStartX + i)*formatSize + alpha_channel_offset];
+            }
         }
     }
+
 }
 
 void Font::drawCachedGlyph(CachedGlyphInfo* glyph, float x, float hOffset, float vOffset,
-- 
1.9.1

